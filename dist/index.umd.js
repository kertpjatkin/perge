!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("peerjs"),require("automerge")):"function"==typeof define&&define.amd?define(["peerjs","automerge"],t):(e=e||self).perge=t(e.peerjs,e.automerge)}(this,function(e,t){return e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,function(){function n(n,o){var r=this;void 0===o&&(o={}),this._connections={},this._actorId=n,this.peer=o.peer||new e(this._actorId),this.docSet=o.docSet||new t.DocSet,this._encode=o.encode||JSON.stringify,this._decode=o.decode||JSON.parse,this.peer.on("connection",function(e){e.on("data",function(t){r._connections[e.peer].receiveMsg(r._decode(t))})})}var o=n.prototype;return o.connect=function(e,n){var o=this;if(this._connections[e])return this.peer.connections[e];var r=n||this.peer.connect(e),i=this._connections[e]=new t.Connection(this.docSet,function(e){r.send(o._encode(e))});return r.on("disconnected",function(){i.close(),delete o._connections[e]}),i.open(),r},o.select=function(e){var n=this,o=this.docSet.getDoc(e)||t.init(this._actorId);return function(t){var r=t.apply(void 0,[o].concat([].slice.call(arguments,1)));return n.docSet.setDoc(e,r),r}},o.subscribe=function(e,t){var n=this;if("function"==typeof e)return this.docSet.registerHandler(e),function(){return n.docSet.unregisterHandler(e)};if("string"==typeof e&&t){var o=function(n,o){n===e&&t(o)};return this.docSet.registerHandler(o),function(){return n.docSet.unregisterHandler(o)}}return function(){}},n}()});
//# sourceMappingURL=index.umd.js.map
