import e from"peerjs";import{Connection as t,init as n,DocSet as o}from"automerge";var r=function(){function r(t,n){var r=this;void 0===n&&(n={}),this._connections={},this._actorId=t,this.peer=n.peer||new e(this._actorId),this.docSet=n.docSet||new o,this._encode=n.encode||JSON.stringify,this._decode=n.decode||JSON.parse,this.peer.on("connection",function(e){e.on("data",function(t){r._connections[e.peer].receiveMsg(r._decode(t))})})}var c=r.prototype;return c.connect=function(e,n){var o=this;if(this._connections[e])return this.peer.connections[e];var r=n||this.peer.connect(e),c=this._connections[e]=new t(this.docSet,function(e){r.send(o._encode(e))});return r.on("disconnected",function(){c.close(),delete o._connections[e]}),c.open(),r},c.get=function(e){return this.docSet.getDoc(e)||n(this._actorId)},c.select=function(e){var t=this;return function(n){var o=n.apply(void 0,[t.get(e)].concat([].slice.call(arguments,1)));return t.docSet.setDoc(e,o),o}},c.subscribe=function(e,t){var n=this;if("function"==typeof e)return this.docSet.registerHandler(e),function(){return n.docSet.unregisterHandler(e)};if("string"==typeof e&&t){var o=function(n,o){n===e&&t(o)};return this.docSet.registerHandler(o),function(){return n.docSet.unregisterHandler(o)}}return function(){}},r}();export default r;
//# sourceMappingURL=index.m.js.map
