import e from"peerjs";import{Connection as n,init as t,DocSet as o}from"automerge";var c=function(){function c(n,t){var c=this;void 0===t&&(t={}),this._connections={},this._actorId=n,this.peer=t.peer||new e(this._actorId),this.docSet=t.docSet||new o,this._encode=t.encode||JSON.stringify,this._decode=t.decode||JSON.parse,this.peer.on("connection",function(e){c._connections[e.peer]||c.connect(e.peer),e.on("data",function(n){c._connections[e.peer].receiveMsg(c._decode(n))})})}var r=c.prototype;return r.connect=function(e,t){var o=this;if(this._connections[e])return this.peer.connections[e];var c=t||this.peer.connect(e),r=this._connections[e]=new n(this.docSet,function(e){c.send(o._encode(e))});return c.on("disconnected",function(){r.close(),delete o._connections[e]}),r.open(),c},r.get=function(e){return this.docSet.getDoc(e)||t(this._actorId)},r.select=function(e){var n=this;return function(t){var o=t.apply(void 0,[n.get(e)].concat([].slice.call(arguments,1)));return n.docSet.setDoc(e,o),o}},r.subscribe=function(e,n){var t=this;if("function"==typeof e)return this.docSet.registerHandler(e),function(){return t.docSet.unregisterHandler(e)};if("string"==typeof e&&n){var o=function(t,o){t===e&&n(o)};return this.docSet.registerHandler(o),function(){return t.docSet.unregisterHandler(o)}}return function(){}},c}();export default c;
//# sourceMappingURL=index.m.js.map
